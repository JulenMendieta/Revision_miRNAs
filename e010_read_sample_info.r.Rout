
R version 3.1.2 (2014-10-31) -- "Pumpkin Helmet"
Copyright (C) 2014 The R Foundation for Statistical Computing
Platform: x86_64-unknown-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> ##d010_read_sample_info.r
> ##2014-05-23 dmontaner@cipf.es
> ##Collecting miRNA data from The Cancer Genome Atlas
> ##This script organizes all sample information
> 
> date ()
[1] "Tue May 26 10:41:59 2015"
> Sys.info ()[c("nodename", "user")]
   nodename        user 
   "crom01" "jmendieta" 
> commandArgs ()
[1] "/opt/soft/libs/R/3.1.2_atlas/lib64/R/bin/exec/R"
[2] "-f"                                             
[3] "e010_read_sample_info.r"                        
[4] "--restore"                                      
[5] "--save"                                         
[6] "--no-readline"                                  
> rm (list = ls ())
> R.version.string ##"R version 3.2.0 (2015-04-16)"
[1] "R version 3.1.2 (2014-10-31)"
> #library (); packageDescription ("", fields = "Version") #
> 
> try (source (".job.r")); try (.job)

.job.r has been sourced

$name
[1] "tcga_download"

$dir
$dir$data
[1] "~/datos/2015/tcga_download"

$dir$code
[1] "~/trabajos/2015/tcga_download"

$dir$scripts
[1] "~/trabajos/2015/tcga_download/scripts"

$dir$docs
[1] "~/trabajos/2015/tcga_download/documents"

$dir$raw
[1] "~/datos/2015/tcga_download/data_raw"

$dir$annotation
[1] "~/datos/2015/tcga_download/data_annotation"

$dir$proces
[1] "~/datos/2015/tcga_download/data_processed"

$dir$plots
[1] "~/datos/2015/tcga_download/results/plots"

$dir$res
[1] "~/datos/2015/tcga_download/results/files"


$testmode
[1] FALSE

$dec
[1] "."

$idsep
[1] " /// "

> 
> options (width = 200)
> 
> 
> ## FUNCTION
> barcode2 <- function (bc, to = "sample") {
+   y <- sapply (bc, strsplit, split = "-")
+   lon <- sapply (y, length)
+   L <- unique (lon)
+   if (length (L) != 1) stop ("unequal pa terns")
+   mat <- matrix (unlist (y), ncol = L, byrow = TRUE)
+   #He cambiado el stop a 3 para añadir toda la info de la muestra
+   sample.number <- substr (mat[,4], start = 1, stop = 3)
+   if (to == "sample") {
+     res  <- paste (mat[,1], mat[,2], mat[,3], sample.number, sep = "-")
+   } else { ##patient
+     res <- paste (mat[,1], mat[,2], mat[,3], sep = "-")
+   }
+   return (res)
+ }
> 
> 
> ###DATOS
> setwd (file.path (.job$dir$raw, "clinical"))
> 
> 
> ################################################################################
> ## File Info: information about the files available
> ################################################################################
> 
> ficheros <- dir (pattern = "biospecimen_sample", recursive= TRUE)
> sample.list <- list()
> for (fi in ficheros) {
+   #Guardamos los nombres de las columnas y les damos un formato X
+   columnas <- read.table (fi, header = FALSE, sep = "\t", quote = "", colClasses = "character", nrow = 1)
+   columnas <- unlist (columnas, use.names = FALSE)
+   columnas <- make.names (columnas)
+   
+   #Tomamos los datos de los ficheros
+   sinfo <- read.table (fi, header = TRUE, sep = "\t", quote = "", as.is = TRUE, na.strings = "[Not Available]", skip = 1)
+   #Les añadimos los nombres de las columnas
+   colnames (sinfo) <- columnas
+   
+   ## eliminate duplicated lines (just in case)
+   sinfo <- unique (sinfo)
+   
+   ## include sample and patient barcodes and file name
+   sinfo[,"Sample"]  <- barcode2 (sinfo$bcr_sample_barcode, to = "sample")
+   sinfo[,"patient"] <- barcode2 (sinfo$bcr_sample_barcode, to = "patient")
+   tag <- sapply (strsplit (sapply (strsplit (fi, split = "_"), function (x) x[2]), split = "\\."), function (x) x[1])
+   ## keep just sample and type information
+   dim (sinfo)
+   sinfo <- unique (sinfo[,c("Sample", "patient", "sample_type")])
+   dim (sinfo)
+   
+   #Lo guardamos en la lista final
+   sample.list[[tag]] <- sinfo
+ }
> 
> 
> ###SALVAMOS
> save (list = "sample.list", file = file.path (.job$dir$proces, "sample_info_all.RData"))
> 
> 
> ###EXIT
> warnings ()
NULL
> sessionInfo ()
R version 3.1.2 (2014-10-31)
Platform: x86_64-unknown-linux-gnu (64-bit)

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8     LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8    LC_PAPER=en_US.UTF-8      
 [8] LC_NAME=C                  LC_ADDRESS=C               LC_TELEPHONE=C             LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     
> q ("no")
> proc.time()
   user  system elapsed 
  2.748   0.184   8.412 
